---
  # - name: Copy files
  #   become: true
  #   copy:
  #     src: ~/project/artifact.tar.gz
  #     dest: ~/web/artifact.tar.gz
  
  # - name: Untar artifact 
  #   shell: |
  #    cd ~/web
  #    mkdir backend
  #    cd backend
  #    tar -xzvf ../artifact.tar.gz


  # - name: Start application
  #   become: true
  #   shell: |
  #     cd ~/web/backend
  #     npm install
  #     pm2 stop default
  #     pm2 start npm -- start

  # - name: Copy files
  #   become: true
  #   copy:
  #     src: ~/project/artifact.tar.gz
  #     dest: /home/ubuntu/artifact.tar.gz

  
  # - name: Unarchive
  #   become: true
  #   shell : |
  #       cd /home/ubuntu
  #       mkdir backend
  #       cd backend
  #       tar xvzf artifact.tar.gz -C .

  # - name: "run server"
  #   become: true
  #   shell : |
  #       cd /home/ubuntu
  #       npm install
  #       pm2 stop default
  #       pm2 start npm -- start

  # - name: extract artifact
  #   become: yes
  #   unarchive:
  #     src: ~/project/artifact.tar.gz
  #     dest: .
  # - name: start app
  #   become: yes
  #   shell: |
  #     #  npm run migrations
  #     #  pm2 delete all
  #     #  export $(grep TYPEORM_HOST /home/ubuntu/.env) && pm2 start npm -- start
  #      cd /home/ubuntu
  #      npm install
  #      pm2 stop default
  #      pm2 start npm -- start



    # environment:
    #   ENVIRONMENT: production
    #   TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
    #   TYPEORM_MIGRATIONS_DIR: "./migrations"
    #   TYPEORM_MIGRATIONS: "./migrations/*.js"
    #   TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
    #   TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
    #   TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    #   TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
    #   TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
    #   TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"



- name: extract artifact
  become: yes
  unarchive:
    src: files/artifact.tar.gz
    dest: .
    
- name: start app
  become: yes
  shell: |
    npm install
    pm2 stop all
    pm2 start npm --name "udapeople-backend" -- run start
  environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
    
- name: "Set pm2 start as service"
  become: yes
  shell: |
    env PATH=$PATH:/usr/local/bin pm2 startup -u ubuntu

- name: check pm2 status
  become: yes
  shell: |
    pm2 describe "udapeople-backend"
  register: command_output_npm
- debug: var=command_output_npm.stdout_lines